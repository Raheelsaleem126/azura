[{"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\index.js":"1","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\App.jsx":"2","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\router\\AppRouter.jsx":"3","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\WhiteListManager\\MyServers.jsx":"4","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\CollectionTracker\\WatchList.jsx":"5","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\CollectionTracker\\NewAlert.jsx":"6","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\TwitterInsights\\MyAudits.jsx":"7","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\WhiteListManager\\MyWL.jsx":"8","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\CollectionTracker\\MyAlert.jsx":"9","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\TwitterInsights\\NewAudits.jsx":"10","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\Welcome\\AzuraTools.jsx":"11","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\Welcome\\MyWatchList.jsx":"12","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\TwitterInsights\\index.jsx":"13","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\CollectionTracker\\index.jsx":"14","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\Welcome\\index.jsx":"15","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\WhiteListManager\\index.jsx":"16","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\pages\\Dashboard\\index.jsx":"17","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\pages\\NotFound\\index.jsx":"18","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\Umbrella\\index.jsx":"19","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\SecretTool\\index.jsx":"20","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\NftCard.jsx":"21","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\utils\\Icons.jsx":"22","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\Table\\index.jsx":"23","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\ButtonsGroup\\index.jsx":"24","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\CollectionSlider\\index.jsx":"25","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\LoginComponent\\index.jsx":"26"},{"size":363,"mtime":1685544870754,"results":"27","hashOfConfig":"28"},{"size":111,"mtime":1685544870679,"results":"29","hashOfConfig":"28"},{"size":3508,"mtime":1685555241575,"results":"30","hashOfConfig":"28"},{"size":6868,"mtime":1685544870749,"results":"31","hashOfConfig":"28"},{"size":3673,"mtime":1685544870738,"results":"32","hashOfConfig":"28"},{"size":4470,"mtime":1685544870738,"results":"33","hashOfConfig":"28"},{"size":8609,"mtime":1685544870741,"results":"34","hashOfConfig":"28"},{"size":4708,"mtime":1685544870749,"results":"35","hashOfConfig":"28"},{"size":3831,"mtime":1685544870737,"results":"36","hashOfConfig":"28"},{"size":5608,"mtime":1685544870742,"results":"37","hashOfConfig":"28"},{"size":2822,"mtime":1685544870746,"results":"38","hashOfConfig":"28"},{"size":10558,"mtime":1685544870747,"results":"39","hashOfConfig":"28"},{"size":997,"mtime":1685544870742,"results":"40","hashOfConfig":"28"},{"size":1950,"mtime":1685544870739,"results":"41","hashOfConfig":"28"},{"size":658,"mtime":1685544870748,"results":"42","hashOfConfig":"28"},{"size":636,"mtime":1685544870750,"results":"43","hashOfConfig":"28"},{"size":5838,"mtime":1685549816410,"results":"44","hashOfConfig":"28"},{"size":349,"mtime":1685544870767,"results":"45","hashOfConfig":"28"},{"size":10951,"mtime":1685544870745,"results":"46","hashOfConfig":"28"},{"size":380,"mtime":1685544870740,"results":"47","hashOfConfig":"28"},{"size":1429,"mtime":1685544870752,"results":"48","hashOfConfig":"28"},{"size":20159,"mtime":1685544870769,"results":"49","hashOfConfig":"28"},{"size":925,"mtime":1685544870753,"results":"50","hashOfConfig":"28"},{"size":499,"mtime":1685544870735,"results":"51","hashOfConfig":"28"},{"size":5152,"mtime":1685544870735,"results":"52","hashOfConfig":"28"},{"size":1424,"mtime":1685558153071,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"az4fhv",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"57"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\index.js",[],[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\App.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\router\\AppRouter.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\WhiteListManager\\MyServers.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\CollectionTracker\\WatchList.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\CollectionTracker\\NewAlert.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\TwitterInsights\\MyAudits.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\WhiteListManager\\MyWL.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\CollectionTracker\\MyAlert.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\TwitterInsights\\NewAudits.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\Welcome\\AzuraTools.jsx",["142"],[],"import { useEffect } from \"react\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { NavLink, useOutletContext } from \"react-router-dom\";\r\n\r\nconst AzuraTools = () => {\r\n  let context = useOutletContext();\r\n  useEffect(() => {\r\n    if(context && context?.setTabName){\r\n      context.setTabName(\"Dashboard\")\r\n    }\r\n  },[]);\r\n  return (\r\n    <>\r\n      <Fade triggerOnce duration={2000}>\r\n        <h4>Welcome to Azura</h4>\r\n      </Fade>\r\n      <Fade triggerOnce duration={2000}>\r\n        <p className=\"light-w\" style={{ margin: \"12px 0\" }}>\r\n          A platform made by Dragonz Labs to bring back transparancy and trust\r\n          in the NFT Space. You will have access to different tools that will\r\n          help you make the best decisions.\r\n        </p>\r\n      </Fade>\r\n      <Fade direction=\"up\" triggerOnce duration={1250} delay={100}>\r\n        <WelcomeMsgs\r\n          data={{\r\n            title: \"Collection Tracker\",\r\n            desc: \"Includes floor price tracker & volume tracker, set up your alert and don't ever miss your exit and entry points.\",\r\n            path: \"/collection-tracker\",\r\n          }}\r\n        />\r\n      </Fade>\r\n      <Fade direction=\"up\" triggerOnce duration={1250} delay={150}>\r\n        <WelcomeMsgs\r\n          data={{\r\n            title: \"Whitelist Manager\",\r\n            desc: \"Don't ever miss a WL Opportunity ever. Our whitelist Manager will check for you all your services and notifies you if you receive a WL role.\",\r\n            path: \"/whitelist-manager\",\r\n          }}\r\n        />\r\n      </Fade>\r\n      <Fade direction=\"up\" triggerOnce duration={1250} delay={200}>\r\n        <WelcomeMsgs\r\n          data={{\r\n            title: \"Twitter Insights\",\r\n            desc: \"Includes twitter mentions and bot tracker. Audit each project and track the project popularity to evaluate the community behind it.\",\r\n            path: \"/twitter-insights\",\r\n          }}\r\n        />\r\n      </Fade>\r\n      <Fade direction=\"up\" triggerOnce duration={1250} delay={250}>\r\n        <WelcomeMsgs\r\n          data={{\r\n            title: \"Umbrella\",\r\n            desc: \"An intuitive tracker to monitor Discord server’s activity and engagement. Umbrella will be installed on different servers to give you real time insights to evaluate a project community.\",\r\n            path: \"/umbrella\",\r\n          }}\r\n        />\r\n      </Fade>\r\n    </>\r\n  );\r\n};\r\n\r\n// cards\r\nconst WelcomeMsgs = ({ data }) => {\r\n  return (\r\n    <div className=\"border-primary welcome-cards rounded d-flex a-i-c j-c-b\">\r\n      <div>\r\n        <h5>{data?.title}</h5>\r\n        <p className=\"light-w\">{data?.desc}</p>\r\n      </div>\r\n      <div>\r\n        <NavLink className=\"btn btn-primary d-flex a-i-c j-c-c\" to={data?.path}>\r\n          Start Now\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AzuraTools;\r\n","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\Welcome\\MyWatchList.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\TwitterInsights\\index.jsx",["143"],[],"import ButtonsGroup from 'components/ButtonsGroup'\r\nimport { useEffect } from 'react';\r\nimport {Outlet, useOutletContext} from 'react-router-dom'\r\n\r\nconst TwitterInsights = () => {\r\n  let context = useOutletContext();\r\n  useEffect(() => {\r\n    if(context && context?.setTabName){\r\n      context.setTabName(\"Twitter Insights\")\r\n    }\r\n  },[]);\r\n  return (\r\n    <div>       \r\n       <div className=\"row j-c-b a-i-c\">\r\n       <ButtonsGroup\r\n        links={[\r\n          { name: \"My Audits\", path: \"my-audits\" },\r\n          { name: \"New Audits\", path: \"new-audits\" },\r\n        ]}\r\n      />\r\n        <div className=\"cs-select ms-md-end\">\r\n          <select name=\"\" id=\"\">\r\n            <option value=\"1\">last 24h</option>\r\n            <option value=\"2\">Last 3 days</option>\r\n            <option value=\"3\">Last 7 days</option>\r\n            <option value=\"4\">Last 30 days</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n        <Outlet/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TwitterInsights\r\n","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\CollectionTracker\\index.jsx",["144"],[],"// css\r\nimport \"./collectionTracker.css\";\r\n// \r\nimport ButtonsGroup from \"components/ButtonsGroup\";\r\nimport { Outlet, useLocation, useOutletContext } from \"react-router-dom\";\r\nimport CollectionSlider from \"components/CollectionSlider\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst CollectionTracker = () => {\r\n  const {pathname} = useLocation();\r\n\r\n  let context = useOutletContext();\r\n  useEffect(() => {\r\n    if(context && context?.setTabName){\r\n      context.setTabName(\"Collection Tracker\")\r\n    }\r\n  },[]);\r\n\r\n  // \r\n  if(pathname === \"/collection-tracker/new-alert\" || pathname ===  \"/collection-tracker/new-alert/\"){\r\n    return  <Outlet /> \r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"row j-c-b a-i-c\">\r\n        <h5>Trendy Collections : &nbsp;</h5>\r\n        <div className=\"cs-select ms-md-end\">\r\n          <select name=\"\" id=\"\">\r\n            <option value=\"1\">Last 1 hour</option>\r\n            <option value=\"2\">Last 2 hour</option>\r\n            <option value=\"3\">Last 3 hour</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      {/* carousel / slider  */}\r\n      <div className=\"collections-slider-container\">\r\n        <Fade duration={1800} triggerOnce>\r\n        <CollectionSlider/>\r\n\r\n        </Fade>\r\n      </div>\r\n      {/*  */}\r\n      <div className=\"row j-c-b a-i-c\">\r\n        <ButtonsGroup\r\n          links={[\r\n            { name: \"Watchlist\", path: \"watch-list\" },\r\n            { name: \"My Alerts\", path: \"my-alerts\" },\r\n            { name: \"New Alerts\", path: \"new-alert\" },\r\n          ]}\r\n        />\r\n        <div className=\"cs-select ms-md-end\">\r\n          <select name=\"\" id=\"\">\r\n            <option value=\"1\">Floor price Alert</option>\r\n            <option value=\"3\">Volume Alert</option>\r\n            <option value=\"2\">All</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionTracker;\r\n","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\Welcome\\index.jsx",["145"],[],"import ButtonsGroup from \"components/ButtonsGroup\";\r\nimport { useEffect } from \"react\";\r\nimport { Outlet, useOutletContext } from \"react-router-dom\";\r\n\r\nconst Welcome = () => {\r\n  let context = useOutletContext();\r\n\r\n  useEffect(() => {\r\n    if(context && context?.setTabName){\r\n      context.setTabName(\"Dashboard\")\r\n    }\r\n  },[]);\r\n  return (\r\n    <>\r\n    <div className=\"row j-c-c a-i-c\">\r\n        <ButtonsGroup\r\n          links={[\r\n            { name: \"Azura Tools\", path: \"azura-tools\" },\r\n            { name: \"My Watchlist\", path: \"my-watchlist\" },\r\n          ]}\r\n        />\r\n      </div>\r\n    <Outlet/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\WhiteListManager\\index.jsx",["146"],[],"import \"./whitelist.css\"\r\nimport ButtonsGroup from \"components/ButtonsGroup\";\r\nimport { Outlet, useOutletContext } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst WhiteListManager = () => {\r\n  let context = useOutletContext();\r\n  useEffect(() => {\r\n    if(context && context?.setTabName){\r\n      context.setTabName(\"Whitelist Manager\")\r\n    }\r\n  },[]);\r\n  return (\r\n    <div>\r\n      <ButtonsGroup\r\n        links={[\r\n          { name: \"My Servers\", path: \"my-servers\" },\r\n          { name: \"My WL\", path: \"my-wl\" },\r\n        ]}\r\n      />\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhiteListManager;\r\n","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\pages\\Dashboard\\index.jsx",["147"],[],"import { NavLink, Outlet, useLocation, useParams } from \"react-router-dom\";\r\nimport {\r\n  AccountOutlineCircle,\r\n  UmbrellaIcon,\r\n  DashboardIcon,\r\n  DiceSearchIcon,\r\n  DiscordIcon,\r\n  PaperIcon,\r\n  SecurityIcon,\r\n  TwitterFilledIcon,\r\n  TwitterIcon,\r\n  WebIcon,\r\n} from \"utils/Icons\";\r\nimport logo from \"assets/images/web/logo.png\";\r\nimport logo_sm from \"assets/images/web/logo_sm.png\";\r\nimport avatarImg from \"assets/images/others/avatar.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport LoginComponent from \"components/LoginComponent\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\n// Dashboard layout wrapper\r\nconst Dashboard = () => {\r\n  const [tabName, setTabName] = useState(\"Dashboard\")\r\n  const { pathname } = useLocation();\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  //\r\n  useEffect(() => {\r\n    let element = document.querySelector(\".pages-wrapper\");\r\n    element?.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  // login function\r\n  const loginToAccount = () => {\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-page d-flex\">\r\n      <aside className=\"sidebar d-flex flex-col\">\r\n        <div className=\"aside-logo w-100 mx-auto text-center\">\r\n          <Fade triggerOnce duration={900}>\r\n            <img src={logo} alt=\"Azura\" />\r\n          </Fade>\r\n          <img className=\"mobile_logo\" src={logo_sm} alt=\"Azura\" />\r\n        </div>\r\n        <nav className=\"aside-navbar  text-center\">\r\n          {/*  */}\r\n          <CustomNav setTabName={setTabName} classes=\"aside-nav-item\" path=\"/azura-tools\" rootPath=\"Dashboard\">\r\n            <DashboardIcon /> <span> Dashboard</span>\r\n          </CustomNav>\r\n          {/*  */}\r\n          <CustomNav\r\n            classes=\"aside-nav-item\"\r\n            rootPath=\"/collection-tracker\"\r\n            path=\"/collection-tracker/watch-list\"\r\n            isNested={true}\r\n            setTabName={setTabName}\r\n          >\r\n            <DiceSearchIcon /> <span> Collection Tracker</span>\r\n          </CustomNav>\r\n          {/*  */}\r\n          <CustomNav\r\n            classes=\"aside-nav-item\"\r\n            isNested={true}\r\n            path=\"/whitelist-manager/my-servers\"\r\n            rootPath=\"/whitelist-manager\"\r\n            setTabName={setTabName}\r\n          >\r\n            <PaperIcon /> <span> Whitelist Manager</span>\r\n          </CustomNav>\r\n          {/*  */}\r\n          <CustomNav\r\n            classes=\"aside-nav-item\"\r\n            isNested={true}\r\n            path=\"/twitter-insights/my-audits\"\r\n            rootPath=\"/twitter-insights\"\r\n            setTabName={setTabName}\r\n          >\r\n            <TwitterIcon /> <span> Twitter Insights</span>\r\n          </CustomNav>\r\n          {/*  */}\r\n          <CustomNav setTabName={setTabName} classes=\"aside-nav-item\" path=\"/umbrella\">\r\n            <UmbrellaIcon /> <span> Umbrella </span>\r\n          </CustomNav>\r\n          {/*  */}\r\n          <CustomNav setTabName={setTabName} classes=\"aside-nav-item\" path=\"/secret-tools\">\r\n            <SecurityIcon /> <span> Secret Tool</span>\r\n          </CustomNav>\r\n          <div className=\"aside-footer\">\r\n            <a href=\"/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Contact\r\n            </a>\r\n            <div className=\"aside-socials d-flex a-i-c\">\r\n              <a href=\"/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <TwitterFilledIcon />\r\n              </a>\r\n              <a href=\"/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <DiscordIcon />\r\n              </a>\r\n              <a href=\"/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <WebIcon />\r\n              </a>\r\n            </div>\r\n            <div className=\"aside-copy-rights\">\r\n              &copy; <span>{new Date().getFullYear()} Dragonz Labs</span>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </aside>\r\n      <main className=\"dashboard-main d-flex flex-col\">\r\n        <header className=\"header d-flex j-c-b a-i-c\">\r\n          <div className=\"header-tab-name\">\r\n            {isAuthenticated && <h5> {tabName} </h5>}\r\n          </div>\r\n          {isAuthenticated ? (\r\n            <div\r\n              role=\"button\"\r\n              tabIndex=\"0\"\r\n              className=\"header-login rounded cursor-pointer d-flex j-c-e a-i-c\"\r\n            >\r\n              <p>Avatar_eXk321</p>\r\n              <div className=\"avatar\">\r\n                <img src={avatarImg} alt=\"Avatar_eXk321\" />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              role=\"button\"\r\n              tabIndex=\"0\"\r\n              onClick={loginToAccount}\r\n              className=\"header-login rounded cursor-pointer d-flex j-c-e a-i-c\"\r\n            >\r\n              <p>Login</p>\r\n              <AccountOutlineCircle />\r\n            </div>\r\n          )}\r\n        </header>\r\n        {isAuthenticated ? (\r\n          <section className=\"pages-wrapper\">\r\n            <Outlet context={{\r\n              setTabName:setTabName\r\n            }}/>\r\n          </section>\r\n        ) : (\r\n          <LoginComponent loginToAccount={loginToAccount} />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomNav = ({ setTabName,path, rootPath, isNested, classes, children }) => {\r\n  const { pathname } = useLocation();\r\n  //\r\n  const checkNested = () => {\r\n    if (isNested) {\r\n      return pathname.includes(rootPath || path);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // \r\n  // const formateTabNames = () => {\r\n  //   return rootPath?.replaceAll(\"/\",\" \")?.replaceAll(\"-\",\" \") || path?.replaceAll(\"/\",\" \")?.replaceAll(\"-\",\" \")\r\n  // };\r\n  return (\r\n    <NavLink\r\n      className={(isActive) =>\r\n        (classes || \" \") +\r\n        (isActive.isActive || checkNested() ? \" bg-primary\" : \" \")\r\n      }\r\n      to={path}\r\n      >\r\n      {children}\r\n    </NavLink>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\pages\\NotFound\\index.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\Umbrella\\index.jsx",["148"],[],"import { useEffect, useState } from 'react';\r\nimport { useOutletContext } from 'react-router-dom'\r\nimport Table from \"components/Table\";\r\nimport {\r\n  DiscordIcon,\r\n  TwitterIcon,\r\n  WebIcon,\r\n} from \"utils/Icons\";\r\n//\r\nimport art_1 from \"assets/images/arts/1.jpg\";\r\nimport art_2 from \"assets/images/arts/2.jpg\";\r\nimport art_3 from \"assets/images/arts/3.jpg\";\r\nimport art_4 from \"assets/images/arts/4.jpg\";\r\nimport art_5 from \"assets/images/arts/5.jpg\";\r\nimport art_6 from \"assets/images/arts/6.jpg\";\r\nimport art_7 from \"assets/images/arts/7.jpg\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n// chart data config\r\nconst chartData = {\r\n  type: \"line\",\r\n  responsive: true,\r\n  options: {\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n  },\r\n  labels: [\"1day\", \"2day\", \"3day\", \"4day\", \"5day\", \"6day\", \"7day\", \"8day\"],\r\n  datasets: [\r\n    {\r\n      label: \"Members\",\r\n      data: [0, 20, 10, 40, 32, 50, 60, 75],\r\n      fill: true,\r\n      backgroundColor: \"rgba(139, 73, 241, 0.036)\",\r\n      borderColor: \"#8B49F1\",\r\n      borderWidth: 2,\r\n    },\r\n    {\r\n      label: \"Online Members\",\r\n      data: [10, 15, 10, 28, 33, 15, 44, 49],\r\n      fill: true,\r\n      borderColor: \"#70ED9D\",\r\n      borderWidth: 2,\r\n    },\r\n    {\r\n      label: \"Boost\",\r\n      data: [0, 30, 15, 28, 44, 39, 26, 19],\r\n      fill: true,\r\n      borderColor: \"#F90000\",\r\n      borderWidth: 2,\r\n    },\r\n    {\r\n      label: \"Messages\",\r\n      data: [0, 10, 15, 20, 25, 40, 60, 88],\r\n      fill: true,\r\n      borderColor: \"#1D26FF\",\r\n      borderWidth: 2,\r\n    },\r\n    {\r\n      label: \"Reactions\",\r\n      data: [50, 50, 49, 49, 54, 60, 75, 90],\r\n      fill: true,\r\n      borderColor: \"#FFDB1D\",\r\n      borderWidth: 2,\r\n    },\r\n  ],\r\n};\r\n\r\nconst chartOptions = {\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        title: {\r\n          display: false,\r\n          text: 'label for Y'\r\n        },\r\n        ticks: {\r\n          beginAtZero: false,\r\n          min: 1,\r\n          max: 100,\r\n          stepSize: [25],\r\n          callback: function (value, x) {\r\n            let ar = [\"1\", \"10\", \"30\", \"50\", \"100\"];\r\n            return ar.reverse()[x] + \"k\";\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        title: {\r\n          display: false,\r\n          text: 'label for X'\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          min: 1,\r\n          max: 10,\r\n          stepSize: [1],\r\n          callback: function (value, x) {\r\n            let ar = [\"1 Aug\", \"5 Aug\", \"10 Aug\", \"15 Aug\", \"20 Aug\", \"26 Aug\", \"30 Aug\", \"5 Sep\"];\r\n            return ar[x];\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\n\r\nconst Umbrella = () => {\r\n  let context = useOutletContext();\r\n  useEffect(() => {\r\n    if (context && context?.setTabName) {\r\n      context.setTabName(\"umbrella \")\r\n    }\r\n  }, []);\r\n\r\n  // columns data for table header\r\n  const columns = [\r\n    { name: \"Collection\" },\r\n    { name: \"Members\" },\r\n    { name: \"Online Members\" },\r\n    { name: \"Boosts\" },\r\n    { name: \"Messages\" },\r\n    { name: \"Reactions\" },\r\n    { name: \"Links\" },\r\n  ];\r\n  // body data for table\r\n  const data = [\r\n    {\r\n      img: art_1,\r\n      members: \"10,501\",\r\n      online_members: \"1,552\",\r\n      boosts: \"52\",\r\n      messages: \"18,679\",\r\n      reactions: \"540\",\r\n      links: { discord: \"/\", twitter: \"/\", web: \"/\" },\r\n    },\r\n    {\r\n      img: art_2,\r\n      members: \"25,802\",\r\n      online_members: \"4,567\",\r\n      boosts: \"4\",\r\n      messages: \"98,980\",\r\n      reactions: \"679\",\r\n      links: { discord: \"/\", twitter: \"/\", web: \"/\" },\r\n    },\r\n    {\r\n      img: art_3,\r\n      members: \"5,231\",\r\n      online_members: \"567\",\r\n      boosts: \"567\",\r\n      messages: \"1,020\",\r\n      reactions: \"56\",\r\n      links: { discord: \"/\", twitter: \"/\", web: \"/\" },\r\n    },\r\n    {\r\n      img: art_4,\r\n      members: \"7,351\",\r\n      online_members: \"238\",\r\n      boosts: \"38\",\r\n      messages: \"10,501\",\r\n      reactions: \"89\",\r\n      links: { discord: \"/\", twitter: \"/\", web: \"/\" },\r\n    },\r\n    {\r\n      img: art_5,\r\n      members: \"125,752\",\r\n      online_members: \"10,555\",\r\n      boosts: \"55\",\r\n      messages: \"2,987\",\r\n      reactions: \"1,789\",\r\n      links: { discord: \"/\", twitter: \"/\", web: \"/\" },\r\n    },\r\n    {\r\n      img: art_6,\r\n      members: \"752\",\r\n      online_members: \"555\",\r\n      boosts: \"50\",\r\n      messages: \"356,923\",\r\n      reactions: \"544\",\r\n      links: { discord: \"/\", twitter: \"/\", web: \"/\" },\r\n    },\r\n    {\r\n      img: art_7,\r\n      members: \"5,752\",\r\n      online_members: \"105\",\r\n      boosts: \"65\",\r\n      messages: \"3,569\",\r\n      reactions: \"65\",\r\n      links: { discord: \"/\", twitter: \"/\", web: \"/\" },\r\n    },\r\n  ];\r\n\r\n  // \r\n  const columnsForInsights = [\r\n    { name: \"Inspect\" },\r\n    { name: \"Collection Name\" },\r\n    { name: \"Total Members\" },\r\n    { name: \"Total Boost\" },\r\n    { name: \"Total Messages\" },\r\n    { name: \"Total Reactions\" },\r\n  ];\r\n\r\n  // data for insights\r\n  const [dataForInsights, setInsightsData] = useState([\r\n    {\r\n      id: 0,\r\n      inspect: false,\r\n      collection_name: \"DeGods\",\r\n      total_members: \"128,345\",\r\n      total_boost: \"18\",\r\n      total_msgs: \"700k\",\r\n      total_reactions: \"10K\",\r\n    },\r\n    {\r\n      id: 1,\r\n      inspect: false,\r\n      collection_name: \"Okay Bears\",\r\n      total_members: \"12,234\",\r\n      total_boost: \"34\",\r\n      total_msgs: \"900k\",\r\n      total_reactions: \"20K\",\r\n    },\r\n    {\r\n      id: 2,\r\n      inspect: false,\r\n      collection_name: \"Nightmare\",\r\n      total_members: \"34,780\",\r\n      total_boost: \"20\",\r\n      total_msgs: \"35k\",\r\n      total_reactions: \"3K\",\r\n    }\r\n  ]);\r\n\r\n  // handle checkbox event\r\n  const handleInspectCheck = (e, id) => {\r\n    let prev = dataForInsights;\r\n    let index = prev.findIndex((v) => v.id === id);\r\n    prev[index] = { ...prev[index], inspect: e.target.checked };\r\n    setInsightsData(prev);\r\n  };\r\n  return (\r\n    <div>\r\n      {/*  */}\r\n      <div className=\"row j-c-b a-i-c\">\r\n        <h5>Overview  &nbsp;</h5>\r\n        <div className=\"cs-select ms-md-end\">\r\n          <select name=\"\" id=\"\">\r\n            <option value=\"1\">24 hours</option>\r\n            <option value=\"2\">7 days</option>\r\n            <option value=\"3\">3 days</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      {/* table */}\r\n      <Table columns={columns}>\r\n        {data?.map((item, i) => (\r\n          <tr key={i}>\r\n            <td className=\"avatar-col\">\r\n              <div className=\"d-flex a-i-c w-100 j-c-s\">\r\n                <div className=\"avatar\">\r\n                  <img src={item.img} alt=\"\" />\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <p>{item.members}</p>\r\n            </td>\r\n            <td>\r\n              <p>{item.online_members}</p>\r\n            </td>\r\n            <td>\r\n              <p>{item.boosts}</p>\r\n            </td>\r\n            <td>\r\n              <p>{item.messages}</p>\r\n            </td>\r\n            <td>\r\n              <p>{item.reactions}</p>\r\n            </td>\r\n            <td>\r\n              <div className=\"d-flex table-socials-wrapper w-100 a-i-c j-c-c\">\r\n                {item?.links?.discord && (\r\n                  <a href={item?.links?.discord} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <DiscordIcon />\r\n                  </a>\r\n                )}\r\n                {item?.links?.twitter && (\r\n                  <a href={item?.links?.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <TwitterIcon />\r\n                  </a>\r\n                )}\r\n                {item?.links?.web && (\r\n                  <a href={item?.links?.web} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <WebIcon />\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </Table>\r\n      <br />\r\n      {/* review */}\r\n      <div className=\"row j-c-b a-i-c\">\r\n        <h5>Review Insights &nbsp;</h5>\r\n        <div className=\"cs-select ms-md-end\">\r\n          <select name=\"\" id=\"\">\r\n            <option value=\"1\">24 hours</option>\r\n            <option value=\"2\">7 days</option>\r\n            <option value=\"3\">3 days</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      {/* graph */}\r\n      <div className=\"chart-wrapper border-gray rounded\">\r\n        <div className=\"chart-inner\">\r\n          <Line data={chartData} options={chartOptions} />\r\n        </div>\r\n        {/* options */}\r\n        <div className=\"row graph-checkbox-row checkboxes-row\">\r\n          <div className=\"checkbox-col\">\r\n            <label className=\"checkBox type-2\" htmlFor={\"mem\"}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={\"mem\"}\r\n              />\r\n              <p>\r\n                Members\r\n              </p>\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox-col\">\r\n            <label className=\"checkBox type-2\" htmlFor={\"on_mem\"}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={\"on_mem\"}\r\n              />\r\n              <p>\r\n                Online Members\r\n              </p>\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox-col\">\r\n            <label className=\"checkBox type-2\" htmlFor={\"boost_\"}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={\"boost_\"}\r\n              />\r\n              <p>\r\n                Boost\r\n              </p>\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox-col\">\r\n            <label className=\"checkBox type-2\" htmlFor={\"msgs\"}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={\"msgs\"}\r\n              />\r\n              <p>\r\n                Messages\r\n              </p>\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox-col\">\r\n            <label className=\"checkBox type-2\" htmlFor={\"react\"}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={\"react\"}\r\n              />\r\n              <p>\r\n                Reactions\r\n              </p>\r\n            </label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      {/* insights table  */}\r\n      <Table columns={columnsForInsights}>\r\n        {dataForInsights?.map((item, i) => (\r\n          <tr key={i}>\r\n            <td className=\"avatar-col\">\r\n              <label className=\"checkBox\" htmlFor={\"inspect\" + item.id}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={\"inspect\" + item.id}\r\n                  value={item?.inspect}\r\n                  onChange={(e) => handleInspectCheck(e, item?.id)}\r\n                />\r\n              </label>\r\n            </td>\r\n            <td>{item?.collection_name}</td>\r\n            <td>{item?.total_members}</td>\r\n            <td>{item?.total_boost}</td>\r\n            <td>{item?.total_msgs}</td>\r\n            <td>{item?.total_reactions}</td>\r\n          </tr>\r\n        ))}\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Umbrella","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\DashboardComponents\\SecretTool\\index.jsx",["149"],[],"import { useEffect } from 'react';\r\nimport {Outlet, useOutletContext} from 'react-router-dom'\r\n\r\nconst SecretTool = () => {\r\n  let context = useOutletContext();\r\n  useEffect(() => {\r\n    if(context && context?.setTabName){\r\n      context.setTabName(\"Secret Tool\")\r\n    }\r\n  },[]);\r\n  return (\r\n    <div>Secret Tool\r\n      <Outlet/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SecretTool","C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\NftCard.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\utils\\Icons.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\Table\\index.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\ButtonsGroup\\index.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\CollectionSlider\\index.jsx",[],[],"C:\\Users\\Noman Traders\\Desktop\\newdiscord\\azura\\client\\src\\components\\LoginComponent\\index.jsx",["150","151"],[],"import { Fade } from \"react-awesome-reveal\";\r\nimport axios from 'axios';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst LoginComponent = () => {\r\n  const handleLogin = async () => {\r\n    // Request for login\r\n    window.location.href = 'http://localhost:3001/auth';\r\n  }\r\n  return (\r\n    <div className=\"welcome-box-main d-flex flex-col j-c-c a-i-c\">\r\n      <Fade direction=\"up\" triggerOnce duration={950}>\r\n        <div className=\"welcome-box text-center rounded border-gray bg-dark\">\r\n          <Fade direction=\"up\" triggerOnce duration={900} delay={900}>\r\n            <h3 className=\"text-uppercase\">Welcome</h3>\r\n          </Fade>\r\n          <Fade direction=\"up\" triggerOnce duration={950} delay={930}>\r\n            <p>Welcome to Azura login to access the full platform</p>\r\n          </Fade>\r\n          <Fade direction=\"up\" triggerOnce duration={1000} delay={960}>\r\n            <button\r\n              onClick={handleLogin}\r\n              className=\"btn btn-primary mx-auto\"\r\n\r\n            >\r\n              Login\r\n            </button>\r\n          </Fade>\r\n          <Fade direction=\"up\" triggerOnce duration={1100} delay={1000}>\r\n            <span className=\"text-muted light-w\">\r\n              Note that you will need to hold one or more DGL NFT to access the\r\n              platform\r\n            </span>\r\n          </Fade>\r\n        </div>\r\n      </Fade>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;\r\n",{"ruleId":"152","severity":1,"message":"153","line":11,"column":5,"nodeType":"154","endLine":11,"endColumn":7,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"153","line":11,"column":5,"nodeType":"154","endLine":11,"endColumn":7,"suggestions":"156"},{"ruleId":"152","severity":1,"message":"153","line":18,"column":5,"nodeType":"154","endLine":18,"endColumn":7,"suggestions":"157"},{"ruleId":"152","severity":1,"message":"153","line":12,"column":5,"nodeType":"154","endLine":12,"endColumn":7,"suggestions":"158"},{"ruleId":"152","severity":1,"message":"153","line":12,"column":5,"nodeType":"154","endLine":12,"endColumn":7,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":40,"nodeType":"162","messageId":"163","endLine":1,"endColumn":49},{"ruleId":"152","severity":1,"message":"153","line":119,"column":6,"nodeType":"154","endLine":119,"endColumn":8,"suggestions":"164"},{"ruleId":"152","severity":1,"message":"153","line":10,"column":5,"nodeType":"154","endLine":10,"endColumn":7,"suggestions":"165"},{"ruleId":"160","severity":1,"message":"166","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":13},{"ruleId":"160","severity":1,"message":"167","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["168"],["169"],["170"],["171"],["172"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar",["173"],["174"],"'axios' is defined but never used.","'Navigate' is defined but never used.",{"desc":"175","fix":"176"},{"desc":"175","fix":"177"},{"desc":"175","fix":"178"},{"desc":"175","fix":"179"},{"desc":"175","fix":"180"},{"desc":"175","fix":"181"},{"desc":"175","fix":"182"},"Update the dependencies array to be: [context]",{"range":"183","text":"184"},{"range":"185","text":"184"},{"range":"186","text":"184"},{"range":"187","text":"184"},{"range":"188","text":"184"},{"range":"189","text":"184"},{"range":"190","text":"184"},[324,326],"[context]",[338,340],[553,555],[329,331],[370,372],[2804,2806],[276,278]]