{"ast":null,"code":"import { extend } from '../../../utils/utils';\nexport default function setBreakpoint() {\n  var swiper = this;\n  var activeIndex = swiper.activeIndex,\n      initialized = swiper.initialized,\n      _swiper$loopedSlides = swiper.loopedSlides,\n      loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\n      params = swiper.params,\n      $el = swiper.$el;\n  var breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n        var paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    var wasMultiRow = params.slidesPerColumn > 1;\n    var isMultiRow = breakpointParams.slidesPerColumn > 1;\n\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(params.containerModifierClass + \"multirow\");\n\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(params.containerModifierClass + \"multirow-column\");\n      }\n\n      swiper.emitContainerClasses();\n    }\n\n    var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    extend(swiper.params, breakpointParams);\n    extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit('_beforeBreakpoint', breakpointParams);\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}","map":{"version":3,"names":["extend","setBreakpoint","swiper","activeIndex","initialized","_swiper$loopedSlides","loopedSlides","params","$el","breakpoints","Object","keys","length","breakpoint","getBreakpoint","breakpointsBase","el","currentBreakpoint","breakpointOnlyParams","undefined","forEach","param","paramValue","parseFloat","parseInt","breakpointParams","originalParams","wasMultiRow","slidesPerColumn","isMultiRow","removeClass","containerModifierClass","emitContainerClasses","addClass","slidesPerColumnFill","directionChanged","direction","needsReLoop","loop","slidesPerView","changeDirection","allowTouchMove","allowSlideNext","allowSlidePrev","emit","loopDestroy","loopCreate","updateSlides","slideTo"],"sources":["C:/Users/Noman Traders/Desktop/Github-Projects/Azura-Backend/azura/client/node_modules/swiper/esm/components/core/breakpoints/setBreakpoint.js"],"sourcesContent":["import { extend } from '../../../utils/utils';\nexport default function setBreakpoint() {\n  var swiper = this;\n  var activeIndex = swiper.activeIndex,\n      initialized = swiper.initialized,\n      _swiper$loopedSlides = swiper.loopedSlides,\n      loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\n      params = swiper.params,\n      $el = swiper.$el;\n  var breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n        var paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    var wasMultiRow = params.slidesPerColumn > 1;\n    var isMultiRow = breakpointParams.slidesPerColumn > 1;\n\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(params.containerModifierClass + \"multirow\");\n\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(params.containerModifierClass + \"multirow-column\");\n      }\n\n      swiper.emitContainerClasses();\n    }\n\n    var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    extend(swiper.params, breakpointParams);\n    extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit('_beforeBreakpoint', breakpointParams);\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}