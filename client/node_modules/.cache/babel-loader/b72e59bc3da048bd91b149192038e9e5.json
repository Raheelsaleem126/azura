{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noman Traders\\\\Desktop\\\\newdiscord\\\\azura\\\\client\\\\src\\\\components\\\\DashboardComponents\\\\WhiteListManager\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./whitelist.css\";\nimport ButtonsGroup from \"components/ButtonsGroup\";\nimport { Outlet, useOutletContext } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WhiteListManager = () => {\n  _s();\n\n  let context = useOutletContext();\n  useEffect(() => {\n    if (context && context !== null && context !== void 0 && context.setTabName) {\n      context.setTabName(\"Whitelist Manager\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonsGroup, {\n      links: [{\n        name: \"My Servers\",\n        path: \"my-servers\"\n      }, {\n        name: \"My WL\",\n        path: \"my-wl\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WhiteListManager, \"rCfKYaGypnyDQkV/a19hHpYL/c8=\", false, function () {\n  return [useOutletContext];\n});\n\n_c = WhiteListManager;\nexport default WhiteListManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhiteListManager\");","map":{"version":3,"names":["ButtonsGroup","Outlet","useOutletContext","useEffect","WhiteListManager","context","setTabName","name","path"],"sources":["C:/Users/Noman Traders/Desktop/newdiscord/azura/client/src/components/DashboardComponents/WhiteListManager/index.jsx"],"sourcesContent":["import \"./whitelist.css\"\r\nimport ButtonsGroup from \"components/ButtonsGroup\";\r\nimport { Outlet, useOutletContext } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst WhiteListManager = () => {\r\n  let context = useOutletContext();\r\n  useEffect(() => {\r\n    if(context && context?.setTabName){\r\n      context.setTabName(\"Whitelist Manager\")\r\n    }\r\n  },[]);\r\n  return (\r\n    <div>\r\n      <ButtonsGroup\r\n        links={[\r\n          { name: \"My Servers\", path: \"my-servers\" },\r\n          { name: \"My WL\", path: \"my-wl\" },\r\n        ]}\r\n      />\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhiteListManager;\r\n"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,YAAP,MAAyB,yBAAzB;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,kBAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC7B,IAAIC,OAAO,GAAGH,gBAAgB,EAA9B;EACAC,SAAS,CAAC,MAAM;IACd,IAAGE,OAAO,IAAIA,OAAJ,aAAIA,OAAJ,eAAIA,OAAO,CAAEC,UAAvB,EAAkC;MAChCD,OAAO,CAACC,UAAR,CAAmB,mBAAnB;IACD;EACF,CAJQ,EAIP,EAJO,CAAT;EAKA,oBACE;IAAA,wBACE,QAAC,YAAD;MACE,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,YAAR;QAAsBC,IAAI,EAAE;MAA5B,CADK,EAEL;QAAED,IAAI,EAAE,OAAR;QAAiBC,IAAI,EAAE;MAAvB,CAFK;IADT;MAAA;MAAA;MAAA;IAAA,QADF,eAOE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAlBD;;GAAMJ,gB;UACUF,gB;;;KADVE,gB;AAoBN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}